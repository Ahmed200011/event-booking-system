{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Booking API",
        "description": "API documentation for the Event Booking application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/store/event": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new event",
                "operationId": "5017daf92868785f87f1438570376991",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/admin/update/{id}/event": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update an event",
                "operationId": "98203e9ed2cd08cabcf943aef2cfa3da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the event to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/admin/all/events'": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all events",
                "operationId": "3adf53a72247c4615291d783f2496764",
                "responses": {
                    "200": {
                        "description": "All events retrieved successfully"
                    }
                }
            }
        },
        "/api/admin/all/booking": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all bookings",
                "operationId": "2cd4321f29f743e0b561cb79aa06e968",
                "responses": {
                    "200": {
                        "description": "All bookings retrieved successfully"
                    }
                }
            }
        },
        "/api/admin/delete/{id}/event": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete an event",
                "operationId": "df2ef88eb90186de927a380329682e73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the event to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "2175035b72c7bfe7c80aafda2add4158",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ahmed Rizk"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "ahmed@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "register success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Ahmed Rizk"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "ahmed@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJK..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "96173284d68e85fb7eb9a8a3e5132bc3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "ahmed@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Ahmed Rizk"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "ahmed@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJK..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "operationId": "d6aa8e4c573cbeeb4a96c60841ba73b6",
                "responses": {
                    "200": {
                        "description": "User data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User data fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Ahmed Rizk"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "ahmed@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout current user",
                "operationId": "719e3ef085a31bc270f930acf263db8c",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "operationId": "e529c81e6aaec82f49950a87ed881f57",
                "responses": {
                    "200": {
                        "description": "All events have been successfully shown",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All events have been successfully shown"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a single event",
                "operationId": "c0f602d773798994c228d99dbd63b842",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event has been successfully shown",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "event has been successfully shown"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/bookEvent": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Book an event (User)",
                "operationId": "e6f50d543a018ed88a2c2c6728b3bbdf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "event_id"
                                ],
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event booked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event booked successfully!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BookingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "409": {
                        "description": "You already booked this event"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/delete/{id}/event": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Cancel a booking for an event",
                "operationId": "bda2c6efa9cbce14b3e48ef5af46b915",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to cancel booking",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Booking canceled successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking canceled successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found for this event."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/events": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get all events booked by authenticated user",
                "operationId": "7efa26c7cabfaf202b1ee4d53bbf4350",
                "responses": {
                    "200": {
                        "description": "User events fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User events fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No events found for this user"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "EventRequest": {
                "required": [
                    "event name",
                    "description",
                    "category",
                    "date",
                    "location",
                    "price",
                    "status"
                ],
                "properties": {
                    "event name": {
                        "description": "* @OA\\Schema(\n*     schema=\"EventRequest\",\n*     type=\"object\",\n*     required={\"event name\", \"description\",\"category\", \"date\", \"location\", \"price\", \"status\"},\n*     @OA\\Property(property=\"event name\", type=\"string\", example=\"Tech Meetup\"),\n*     @OA\\Property(property=\"description\", type=\"string\", example=\"Meetup for developers.\"),\n*     @OA\\Property(property=\"category\", type=\"string\", example=\"cs.\"),\n*     @OA\\Property(property=\"date\", type=\"string\", format=\"date\", example=\"2025-06-10\"),\n*     @OA\\Property(property=\"location\", type=\"string\", example=\"cairo.\"),\n*     @OA\\Property(property=\"price\", type=\"string\", example=\"200\"),\n*     @OA\\Property(property=\"status\", type=\"string\", example=\"0\")\n* )",
                        "type": "string",
                        "example": "Tech Meetup"
                    },
                    "description": {
                        "type": "string",
                        "example": "Meetup for developers."
                    },
                    "category": {
                        "type": "string",
                        "example": "cs."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-10"
                    },
                    "location": {
                        "type": "string",
                        "example": "cairo."
                    },
                    "price": {
                        "type": "string",
                        "example": "200"
                    },
                    "status": {
                        "type": "string",
                        "example": "0"
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Laravel Conference"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-01"
                    }
                },
                "type": "object"
            },
            "BookingResource": {
                "title": "Booking Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "event_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token with Bearer prefix",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "User",
            "description": "User"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}